name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'

jobs:
  data-validation:
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/dvc-sa.json
    steps:
    - uses: actions/checkout@v3
    
    - name: Install DVC with GDrive support
      run: pip install "dvc[gdrive]"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Google credentials
      run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}" > dvc-sa.json
    
    - name: Pull DVC data
      run: dvc pull
    
    - name: Validate data schema
      run: |
        python -c "
import pandas as pd
df = pd.read_csv('data/raw/Telco_Customer_Churn.csv')
assert 'Churn' in df.columns, 'Target column missing'
assert len(df) > 1000, 'Insufficient data'
print('Data validation passed!')
"

  model-training:
    needs: data-validation
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/dvc-sa.json
      MLFLOW_TRACKING_URI: ./mlruns
    steps:
    - uses: actions/checkout@v3
    
    - name: Install DVC with GDrive support
      run: pip install "dvc[gdrive]"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Google credentials
      run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}" > dvc-sa.json
    
    - name: Pull DVC data
      run: dvc pull

    - name: Create config directory
      run: mkdir -p config
    
    - name: Prepare data
      run: python src/prepare_data.py
    
    - name: Train model
      run: python src/train.py
    
    - name: Register model
      run: python src/model_registry.py
    
    - name: Evaluate model
      run: python src/evaluate.py
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-artifacts
        path: |
          models/
          metrics/
  
  monitoring:
    needs: model-training
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/dvc-sa.json
    steps:
    - uses: actions/checkout@v3
    
    - name: Install DVC with GDrive support
      run: pip install "dvc[gdrive]"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Google credentials
      run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}" > dvc-sa.json

    - name: Pull DVC data
      run: dvc pull

    - name: Run DVC pipeline
      run: dvc repro

    - name: Download model artifacts
      uses: actions/download-artifact@v4
      with:
        name: model-artifacts
        path: .
    
    - name: Run monitoring checks
      run: |
        python src/model_monitor.py
        python src/data_monitor.py
    
    - name: Upload monitoring reports
      uses: actions/upload-artifact@v4
      with:
        name: monitoring-reports
        path: reports/
